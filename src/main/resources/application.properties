app.jdbc.driverClassName=org.hsqldb.jdbcDriver
db.url=jdbc:h2:mem:testdb
db.username=sa
db.password=
  # Max size shouldn't differ from number of request handling threads - otherwise there will be extra connections
  # or threads will be blocked waiting for connections to be released by other threads
db.pool.max_size=16
db.pool.min_size=4
  # In case there are firewalls that can drop the connection or some other tools/network issues we should be able to
  # a) maintain keep-alive messages so that no one abrupts the connection
  # b) detect failures and re-create DB connections in the background instead of making user wait
db.pool.idle_connections_test_period_sec=180
  # If the pool doesn't return the value within this period, the exception will be raised. This can happen only if
  # there are not enough connections in the pool at the moment and the pool tries to connect but DB doesn't respond.
db.pool.checkout_timeout_millisec=10000
  # A.k.a. Abandoned Connections Timeout=if our code borrowed the connection, but doesn't return it back to the pool.
  # Usually means either connection leaks (forget to close it) or too long queries (which we don't have).
db.pool.unreturned_connection_timeout_sec=30000
  # In case DB is down for a second and we failed to acquire a connection - the pool will retry to acquire it again
db.pool.acquire_attempts=1